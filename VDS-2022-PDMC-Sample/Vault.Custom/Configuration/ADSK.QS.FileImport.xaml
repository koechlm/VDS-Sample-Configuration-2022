<?xml version="1.0" encoding="utf-8"?>
<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                x:Name="FileImportWindow"
                Background="#F0F0F0" SizeToContent="WidthAndHeight" ResizeMode="NoResize" MaxWidth="1000" MinWidth="710">
    <WPF:MainWindow.Resources>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="lblRequired" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
        </Style>

        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="26" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsReadOnly" Value="{Binding IsReadonly}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="#F0F0F0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="BorderBrush" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="validationTemplate">
            <Grid>
                <Label Foreground="Red" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Please insert a integer"/>
                <Border BorderThickness="1" BorderBrush="Red">
                    <AdornedElementPlaceholder />
                </Border>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsReadonly}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Height" Value="26"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="NumSchmStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <!--<Setter Property="Visibility" Value="Collapsed"/>-->
            <Setter Property="IsEnabled" Value="{Binding Items.Count, RelativeSource={RelativeSource Self}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding PsList[GetNumSchms]}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="26"/>
            <!--<Setter Property="Visibility" Value="Collapsed"/>-->
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="ToolTip" Value="{Binding UIString[MSDCE_TT28]}"/>

        </Style>
    </WPF:MainWindow.Resources>
    <WPF:MainWindow.Style>
        <Style TargetType="{x:Type WPF:MainWindow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="Title" Value="Drag'n Drop Import - Numbering" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </WPF:MainWindow.Style>
    <Grid ScrollViewer.VerticalScrollBarVisibility="Disabled">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ProgressBar x:Name="mImportProgress" Value="0"/>
        <TextBlock x:Name="txtInstructionMsg" Grid.Row="1" TextWrapping="Wrap" Text="{Binding UIString[], FallbackValue=Drop Files on Upload Symbol below; files are added to Vault DMS Folder.}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0"/>
        <Grid x:Name="grdRadioBtns1" Margin="10,10,518,10" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <RadioButton x:Name="radioRetainName" Content="Retain File Name" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <RadioButton x:Name="radioNumberedName" Content="Rename File Name = Number" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="True" Grid.Row="1"/>
        </Grid>
        <DockPanel x:Name="dockPanelDragArea" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" MinWidth="300" Grid.Row="3" >
            <Image x:Name="mFilesDragArea" AllowDrop="True" ToolTip="{Binding UIString[], FallbackValue=Drop Files here to import.}"
                   Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\DragFilesActive.png"
Stretch="Fill" StretchDirection="DownOnly" ForceCursor="True" />
        </DockPanel>
        <DataGrid x:Name="dtGrdPropEdit" Grid.Row="4" AlternatingRowBackground="LightCyan" AlternationCount="2" Margin="10,0" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" RowBackground="White" AutoGenerateColumns="False" Background="White">
            <DataGrid.Columns>
                <DataGridTextColumn MinWidth="200" Binding="{Binding mOrigFileName}" IsReadOnly="True">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=File Name - Source File, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding mFileNewName}" IsReadOnly="True" MinWidth="200">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=File Name - Imported File, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="NewFileTitleCol" Binding="{Binding mFileTitle}" CanUserResize="True" Width="Auto" MinWidth="120">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Title, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="NewFileDescrCol" Binding="{Binding mFileDescr}" CanUserResize="True" Width="Auto" MinWidth="162">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Description, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid x:Name="grdButtons" Margin="10,10,0,0" Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="txtStatusInfo" HorizontalAlignment="Left" MinWidth="300" Grid.Column="1" IsReadOnly="True"/>
            <Label x:Name="label" Content="Status Message" Height="Auto" VerticalAlignment="Center"/>
            <Button x:Name="btnUpdate" Content="{Binding UIString[], FallbackValue=Update File Properties}" Command="{Binding PsCmd[mImportUpdateProps]}" Grid.Column="2" Margin="10,0,0,0" MinWidth="100" IsEnabled="False" Padding="5,1"/>
            <Button x:Name="btnRestart" Content="{Binding UIString[], FallbackValue=Restart}" Command="{Binding PsCmd[mFileImportRestart]}" Grid.Column="4" Height="26" Margin="10" IsEnabled="False" MinWidth="60"/>
            <Button x:Name="btnClose" Content="{Binding UIString[], FallbackValue=Close}" Command="{Binding CancelWindowCommand, ElementName=FileImportWindow}" Grid.Column="5" Height="26" Margin="10" MinWidth="60"/>
        </Grid>
    </Grid>
</WPF:MainWindow>