<?xml version="1.0" encoding="utf-8"?>

<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                x:Name="FileWindow"
                AllowsTransparency="False" Background="#F0F0F0" ResizeMode="NoResize" SizeToContent="WidthAndHeight" d:DesignHeight="437.325">
    <WPF:MainWindow.Resources>
        <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
        <WPF:InverseBoolConverter x:Key="BoolConvert"/>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding Typ}" Value="String">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" CharacterCasing="{Binding Case}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Numeric">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"
                                         Height="25" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Bool">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                          IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Material">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" 
                                CharacterCasing="{Binding Case}" IsReadOnly="True" Background="WhiteSmoke" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Part Number">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" 
                                CharacterCasing="{Binding Case}" IsReadOnly="True" Background="WhiteSmoke" ToolTip="System generated" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Teilenummer">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" 
                                CharacterCasing="{Binding Case}" IsReadOnly="True" Background="WhiteSmoke" ToolTip="System generated" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Drawing ID">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" 
                                    Background="WhiteSmoke" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Filled by Vault'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Tag">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" Background="White" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" 
                                    IsReadOnly="False" IsTabStop="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Type">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" Background="WhiteSmoke" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Type DE">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" Background="WhiteSmoke" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Subtype">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" Background="WhiteSmoke" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Subtype DE">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" Background="WhiteSmoke" 
                                    ToolTip="{Binding DataContext.UIString[], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, FallbackValue='Select the document tag for automatic naming'}" 
                                    IsReadOnly="True" IsTabStop="False"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Margin" Value="0,4,0,0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="DynamicDataGridBtnCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Width" Value="Auto"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Name}" Value="Part Number">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Part Number" 
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="White" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Teilenummer">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Part_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Part Number" 
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="White" MinWidth="20" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Stock Number">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Stock Number" 
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="White" MinWidth="20" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Bestandsnummer">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content="{Binding DataContext.UIString[], FallbackValue=' . . . ', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Command="{Binding DataContext.PsCmd[mInitializeItemSearch -Context Stock_Number], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                       CommandParameter="Stock Number"
                                    ToolTip="{Binding DataContext.UIString[Adsk.QS.ItemSearch_10], FallbackValue=Expand Item Query Builder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Grid.Column="1" Padding="5,1" Background="White" MinWidth="20" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Title">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content=" . . . " 
                                    Command="{Binding DataContext.PsCmd[mInitializeTermCatalog], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue='No hand typed values, select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" 
                                    Padding="5,1" IsTabStop="False" MinWidth="20" Background="White" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Titel">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content=" . . . " 
                                    Command="{Binding DataContext.PsCmd[mInitializeTermCatalog], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue='No hand typed values, select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" 
                                    Padding="5,1" IsTabStop="False" MinWidth="20" Background="White" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                </Button>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="General Notes">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <CheckBox x:Name="chkGnrlNtsInheritance" IsChecked="{Binding DataContext.Prop[General Notes Inheritance].Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[], FallbackValue='Derive General Notes from Project', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Document Tag">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Button Content=" . . . " Command="{Binding DataContext.PsCmd[mInitializeISO61355], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    ToolTip="{Binding DataContext.UIString[Adsk.ISO61355.TT01], FallbackValue='Select from ISO 61355 classification scheme.', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" 
                                    IsTabStop="False" MinWidth="20" Background="White" BorderThickness="1" BorderBrush="#FFB4B4B4" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                </Button>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ClassificationDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox 
                                  Text="{WPF:ValidatedBinding Value, StringFormat=N}"
                                  BorderThickness="0" />
                    </ControlTemplate>
                    <!--<ControlTemplate>
                        <ComboBox ItemsSource="{Binding ListValues}"
                                  Text="{WPF:ValidatedBinding Value, StringFormat=N}" IsEditable="True"
                                  BorderThickness="0" />
                    </ControlTemplate>-->
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding EnforceListValues}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{Binding Value, StringFormat=N}" BorderThickness="0" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Bool">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="1,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="#ff0000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Setter Property="Height" Value="25.5" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
        </Style>
        <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1,1,1,1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DocTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TemplateCbStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding Templates}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=TemplateTB, Path=Visibility}" Value="Visible">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,15,2,5" />
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="IsExpanded" Value="True" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding HasItems, ElementName=NumSchms}" Value="False">
                    <Setter Property="IsExpanded" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NumSchmFieldsEmpty, ElementName=DSNumSchmsCtrl}" Value="True">
                    <Setter Property="IsExpanded" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </WPF:MainWindow.Resources>
    <WPF:MainWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(500)]}"/>
    </WPF:MainWindow.InputBindings>
    <TabControl Background="#FFF0F0F0">
        <TabItem  x:Name="tabProperties" Header="{Binding UIString[MSDCE_MultiTab_01], FallbackValue=Properties}">
            <TabItem.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                </LinearGradientBrush>
            </TabItem.Background>
            <AdornerDecorator>
                <Grid x:Name="grdMain" Margin="5" Background="#FFF0F0F0" MinHeight="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition  />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdGeneralProps" Margin="0"
			            ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}"
			            Width="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="140" />
                            <ColumnDefinition Width="*"
                                  MinWidth="180" MaxWidth="180" />
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding UIString[LBL8], FallbackValue=Categories}" Grid.Row="2" Grid.Column="0" />
                        <ComboBox x:Name="Categories" Grid.Row="2" Grid.Column="1"
                          DisplayMemberPath="Name" SelectedItem="{Binding DynamicPropertiesCategory}"
                          SelectedValuePath="Name" SelectedValue="{Binding Prop[_Category].Value}"
                          ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                          IsEnabled="{Binding CreateMode}" />
                        <Label Content="{Binding UIString[LBL23], FallbackValue=DocTypes}" Grid.Column="0"
                            Visibility="{Binding Visibility, ElementName=DocTypeCombo}" />
                        <!-- Don't use static xml resource, use viewmodel binding instead. -->
                        <ComboBox ItemsSource="{Binding PsList[GetTemplateFolders], Mode=OneTime}"
                              x:Name="DocTypeCombo"
                              Grid.Row="0"
                              Grid.Column="1"
                              IsEnabled="{Binding CreateMode}"
                              DisplayMemberPath="DocName"
                              SelectedValuePath="Path"
                              SelectedValue="{Binding TemplatePath, Mode=OneWayToSource}"
                              SelectedIndex="0"
                              Style="{StaticResource DocTypeStyle}" />
                        <Label Content="{Binding UIString[LBL9], FallbackValue=Templates}" Grid.Row="1" Grid.Column="0"
                            Visibility="{Binding Visibility, ElementName=TemplateCB}" />
                        <Grid Grid.Row="1" Grid.Column="1">
                            <ComboBox x:Name="TemplateCB" IsSynchronizedWithCurrentItem="True"
                          SelectedItem="{Binding SelectedTemplate}" Style="{StaticResource TemplateCbStyle}" />
                            <TextBlock x:Name="TemplateTB" Text="{Binding UIString[LBL28]}" Margin="1" IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedItem, ElementName=TemplateCB}"
                                                   Value="{x:Null}" />
                                                    <Condition Binding="{Binding CreateMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="Background" Value="#F0F0F0" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Label Content="{Binding UIString[LBL10], FallbackValue=Numberingscheme}" Grid.Column="0" Grid.Row="3"
                            Visibility="{Binding Visibility, ElementName=NumSchms}" />
                        <ComboBox x:Name="NumSchms" Grid.Column="1" Grid.Row="3"
                            SelectedIndex="0"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Name"
                            SelectedValue="{Binding Prop[_NumSchm].Value}"
                            ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
                            IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                            Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                            />
                        <Label Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="0" Grid.Row="4" Height="Auto"
                            Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" />
                        <WPF:DSNumSchemeCtrl Grid.Column="1" Grid.Row="4" x:Name="DSNumSchmsCtrl"
                                 IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
                                 Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                                 GeneratedNumberProperty="_GeneratedNumber" Style="{StaticResource NumSchmCtrlStyle}" 
                                />
                        <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="5" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Row="5" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True"/>
                        <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="6" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox Text="{Binding Prop[_XLTN_DATE VERSION CREATED].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" Grid.Row="6" Grid.Column="1"  Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True"/>
                        <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="7" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Row="7" Grid.Column="1" Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" IsReadOnly="True" />
                        <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Grid.Row="9" Height="Auto" Grid.RowSpan="2" BorderThickness="1" />
                        <TextBox Grid.Row="9" Text="{Binding Prop[_XLTN_COMMENTS].Value}" x:Name="Comments" Grid.Column="1" VerticalScrollBarVisibility="Auto" 
                            Height="Auto" TextWrapping="Wrap" AcceptsReturn="True" VerticalContentAlignment="Top" BorderThickness="0,1,1,1" MinHeight="50" MaxWidth="220" MaxHeight="50" />
                    </Grid>
                    <DataGrid Grid.Column="1" x:Name="DSDynCatPropGrid"
                        ItemsSource="{Binding DynamicProperties}"
                        ToolTip="{Binding UIString[LBL63], FallbackValue=Category Properties}"
                        AutoGenerateColumns="False"
                        HeadersVisibility="Column"
                        ScrollViewer.CanContentScroll="True"
                        EnableRowVirtualization="False"
                        HorizontalGridLinesBrush="WhiteSmoke"
                        VerticalGridLinesBrush="WhiteSmoke" BorderBrush="Gray" MaxWidth="500"
                        Margin="5,0,0,0" BorderThickness="1" MaxHeight="400">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding DispName}" CellStyle="{StaticResource DynamicDataGridLabelStyle}"
                                    MinWidth="140" Width="Auto" IsReadOnly="True">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[LBL64], FallbackValue=Property, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Value}" Width="*"
                                    CellStyle="{StaticResource DynamicDataGridCellStyle}" IsReadOnly="True" MaxWidth="500">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                Text="{Binding DataContext.UIString[LBL65], FallbackValue=Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{Binding DataContext.UIString[ADSK.QS.DynGrid.01], FallbackValue=Options, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                CellStyle="{StaticResource DynamicDataGridBtnCellStyle}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Expander x:Name="expFilePath" Grid.ColumnSpan="2" Header="{Binding UIString[LBL6], FallbackValue=File Name}" Grid.Row="2"
                  Style="{StaticResource ExpanderStyle}" VerticalAlignment="Bottom" Background="Transparent">
                        <Grid Background="#FFE5E5E5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Column="0"
            		 Grid.Row="1" BorderThickness="1" />
                            <TextBox Text="{WPF:ValidatedBinding Prop[_FilePath].Value}" IsReadOnly="True"
            		IsTabStop="False" Grid.Row="1" Grid.Column="1" BorderThickness="0,1,1,1" />
                            <Label Content="{Binding UIString[LBL6], FallbackValue=Filename}" Grid.Column="0"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" />
                            <TextBox x:Name="FILENAME" Text="{WPF:ValidatedBinding Name}"
            		IsTabStop="False" Style="{StaticResource Required}"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" Grid.Column="1" />
                        </Grid>
                    </Expander>
                    <Grid x:Name="ButtonGrid" Style="{StaticResource ButtonGridStyle}" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,5,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                    Command="{Binding CloseWindowCommand, ElementName=FileWindow}" IsEnabled="{Binding Properties.IsValid}"
                    Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                        <Button x:Name="btnEsc" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                    Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80"
                    HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                    <Expander x:Name="expItemMasterSearch" Grid.Column="2" Header="" ExpandDirection="Right"  IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="350" VerticalAlignment="Top" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
                        <Grid x:Name="grdItemSearchMain" Background="#FFE5E5E5" Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="217*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="160"/>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="160"/>
                                <ColumnDefinition Width="200"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="grdItemSearchHeader" Grid.ColumnSpan="4">
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF055599" Offset="1"/>
                                        <GradientStop Color="#FF1E92F1"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <Image HorizontalAlignment="Left" Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\ItemMaster.png" Width="16" Margin="5,0,0,0"/>
                                <TextBlock x:Name="lblItemMaster" TextWrapping="Wrap" Text="{Binding UIString[Adsk.QS.ItemSearch_00], FallbackValue=Item Master}" Margin="21,0,0,0" FontSize="14" Padding="10,5,0,0" Foreground="White" VerticalAlignment="Center" Height="27">
                                    <TextBlock.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF055599" Offset="1"/>
                                            <GradientStop Color="#FF1E92F1"/>
                                        </LinearGradientBrush>
                                    </TextBlock.Background>
                                </TextBlock>
                            </Grid>
                            <Label x:Name="lblItemSearchMultipleProp" Content="{Binding UIString[Adsk.QS.ItemSearch_01], FallbackValue=Multiple Properties}" Height="Auto" Grid.Row="1" BorderThickness="1,1,1,0"/>
                            <Label x:Name="lblItemSearchTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title (Item\, ECO)}" Grid.Row="2" Height="Auto" BorderThickness="1,1,1,0"/>
                            <TextBox x:Name="txtItemSearchMultipleProp" Grid.Column="1" Height="Auto" Grid.Row="1" BorderThickness="0,1,0,0"/>
                            <TextBox x:Name="txtItemSearchTitle" Grid.Column="1" Height="Auto" Grid.Row="2" BorderThickness="0,1,0,0"/>
                            <ComboBox x:Name="cmbItemSearchCategory" ItemsSource="{Binding PsList[mGetItemCategories], Mode=OneTime}" Grid.Column="1" Height="Auto" Grid.Row="3" BorderThickness="0,1" IsEditable="True"/>
                            <TextBox x:Name="txtItemSearchNumber" Grid.Column="3" Height="Auto" Grid.Row="1"/>
                            <TextBox x:Name="txtItemSearchDescription" Grid.Column="3" Height="Auto" Grid.Row="2"/>
                            <ComboBox x:Name="cmbItemSearchMaterial" Grid.Column="3" Height="Auto" Grid.Row="3" BorderThickness="0,1,1,1" IsEditable="True"/>
                            <Grid x:Name="grdItemSearchButtons" Grid.Row="4" Grid.ColumnSpan="4" Margin="0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btnItemSearch" Command="{Binding PsCmd[mGetItemsBySearchCriterias]}" HorizontalAlignment="Left" Height="24" Background="#FFE8E8F0" Margin="0,0,10,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\VaultSearchExec.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                        <Label Content="{Binding UIString[Adsk.QS.ItemSearch_07], FallbackValue=Search}" Grid.Column="1" BorderThickness="0"/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnItemSearchClear" Command="{Binding PsCmd[mItemSearchClear]}" HorizontalAlignment="Left" Height="24" Background="#FFE8E8F0" Grid.Column="1" Margin="0,0,10,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\VaultSearchClear.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                        <Label Content="{Binding UIString[Adsk.QS.ItemSearch_], FallbackValue=Clear}" Grid.Column="1" BorderThickness="0"/>
                                    </Grid>
                                </Button>
                            </Grid>
                            <Label x:Name="lblItemSearchCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" Grid.Row="3" Height="Auto" BorderThickness="1"/>
                            <Label x:Name="lblItemSearchNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Column="2" Grid.Row="1" Height="Auto"/>
                            <Label x:Name="lblItemSearchDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Column="2" Grid.Row="2" Height="Auto"/>
                            <Label x:Name="lblItemSearchMaterial" Content="{Binding UIString[LBL75], FallbackValue=Material}" Grid.Column="2" Grid.Row="3" Height="Auto" BorderThickness="1"/>
                            <TextBox x:Name="txtItemSearchResultMsg" Grid.ColumnSpan="4" Grid.Row="5" TextWrapping="Wrap" Text="" Background="#FFFFFFE1" Height="24" BorderThickness="1,1,1,0" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto"/>
                            <DataGrid x:Name="ItemsFound" AutoGenerateColumns="False" Grid.ColumnSpan="4" Grid.Row="6" Background="White" HorizontalGridLinesBrush="#FFE7E8EC" 
                            VerticalGridLinesBrush="#FFE7E8EC" AlternatingRowBackground="#FFE1F1FB" SelectionMode="Single" CanUserResizeRows="False" IsReadOnly="True" MaxHeight="{Binding MaxHeight, ElementName=DSDynCatPropGrid}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="ItemSearchNumber" Binding="{Binding Item}" Width="*">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_04], FallbackValue=Number, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="ItemSearchTitle" Binding="{Binding Title}" Width="*">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="ItemSearchDescription" Binding="{Binding Description}" Width="*">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="ItemSearchMaterial" Binding="{Binding Material}" Width="*">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[LBL75], FallbackValue=Material, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="ItemSearchCategory" Binding="{Binding Category}" Width="*">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="btnItemDataCopy" Grid.Row="7" Margin="0,10,0,5" HorizontalAlignment="Center" IsEnabled="False" 
                            Command="{Binding PsCmd[mCopyItemData]}" Grid.ColumnSpan="4" ToolTipService.ShowOnDisabled="True"
                            ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12]}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\CopyIcon.ico" Width="24" Height="24" StretchDirection="DownOnly"/>
                                    <Label x:Name="lblBtnItemDataCopy" Content="{Binding UIString[Adsk.QS.ItemSearch_11], FallbackValue=Copy Item Data}" ToolTip="{Binding UIString[Adsk.QS.ItemSearch_12], FallbackValue=Copy metadata to file property}" Grid.Column="1" BorderThickness="0"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </Expander>
                    <Expander x:Name="expTermSearch" Grid.Column="2" Header="" ExpandDirection="Right" IsExpanded="False" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="350" VerticalAlignment="Top" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}">
                        <Grid x:Name="grdTermCatalog" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Background="#FFF0F0F0" Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition MaxHeight="350"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <GroupBox x:Name="grpClassification" Header="{Binding UIString[ClassTerms_14], FallbackValue=Filter}" Grid.Row="0" BorderBrush="#FFABADB3">
                                <Grid x:Name="grdContentFilter">
                                    <WrapPanel x:Name="wrpClassification" Grid.Row="2">
                                        <Button x:Name="btnClsReset" Command="{Binding PsCmd[mResetClassFilter]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" Width="24" Height="24">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border BorderBrush="#FFABADB3" BorderThickness="1">
                                                        <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </WrapPanel>
                                </Grid>
                            </GroupBox>
                            <GroupBox x:Name="grpSearchText" Grid.Row="1" Header="{Binding UIString[ClassTerms_16], FallbackValue=Search Text \= term definition; add Language(s) below to widen scope}" BorderBrush="#FFABADB3">
                                <Grid x:Name="grdTermSearch" Width="562" HorizontalAlignment="Left">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="mSearchTermText" Grid.Column="0" ToolTip="{Binding UIString[ClassTerms_TT06], FallbackValue=Apply * for partial terms}" BorderThickness="1" HorizontalAlignment="Left" Width="250"/>
                                    <Button x:Name="btnSearchTerm" Grid.Column="1" Content="{Binding UIString[ClassTerms_BTN8], FallbackValue=Search}" Command="{Binding PsCmd[mSearchTerms]}" Width="80" Margin="3,0,0,0" BorderBrush="#FFABADB3" Height="24" HorizontalAlignment="Left"/>
                                </Grid>
                            </GroupBox>
                            <GroupBox x:Name="grpLanguages" Header="{Binding UIString[ClassTerms_15], FallbackValue=Languages}" Grid.Row="2" BorderBrush="#FFABADB3">
                                <Grid x:Name="grdLanguages" Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="chkDE" Content="{Binding UIString[ClassTerms_02], FallbackValue=German}"/>
                                    <CheckBox x:Name="chkEN" Content="{Binding UIString[ClassTerms_03], FallbackValue=English}" Grid.Column="1"/>
                                    <CheckBox x:Name="chkFR" Content="{Binding UIString[ClassTerms_04], FallbackValue=French}" Grid.Column="2"/>
                                    <CheckBox x:Name="chkIT" Content="{Binding UIString[ClassTerms_05], FallbackValue=Italian}" Grid.Column="3"/>
                                </Grid>
                            </GroupBox>
                            <TextBox x:Name="txtTermStatusMsg" Grid.Row="3" TextWrapping="Wrap" HorizontalContentAlignment="Center" BorderBrush="#FFE5E5E5" VerticalAlignment="Top" 
                                BorderThickness="0" Visibility="Collapsed" Background="#FFF6FB82"/>
                            <DataGrid x:Name="dataGrdTermsFound" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" 
                                HorizontalGridLinesBrush="WhiteSmoke" VerticalGridLinesBrush="WhiteSmoke" ColumnHeaderHeight="26" 
                                AlternatingRowBackground="LightCyan" Background="White" Cursor="Hand" ClipboardCopyMode="IncludeHeader" 
                                Focusable="False" VerticalScrollBarVisibility="Auto" Grid.Row="4" RowHeight="24" Margin="0,2,0,0" HorizontalContentAlignment="Stretch" >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Term_DE}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[ClassTerms_02], FallbackValue=German, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Term_EN}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[ClassTerms_03], FallbackValue=English, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Term_FR}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[ClassTerms_04], FallbackValue=French, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Term_IT}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[ClassTerms_05], FallbackValue=Italian, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding PsCmd[m_SelectTerm]}" Header="{Binding UIString[ClassTerms_BTN9], FallbackValue=Insert in Title Field}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                            <Grid x:Name="grdButtons" Grid.Row="5" Margin="0,10">
                                <Button x:Name="btnAdopt" Command="{Binding PsCmd[m_SelectTerm]}" 
                                    Content="{Binding UIString[ClassTerms_BTN10], FallbackValue=Adopt}"                             
                                    HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                                    ToolTip="{Binding UIString[ClassTerms_TT00]}"/>
                            </Grid>
                        </Grid>
                    </Expander>
                    <Expander x:Name="expISO61355" Grid.Column="2" Header="" ExpandDirection="Right" Visibility="Collapsed" Grid.RowSpan="4" MinHeight="350" MaxHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="0">
                        <Grid x:Name="grdISO61355" Background="#FFF0F0F0" Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition MaxHeight="350"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TabControl x:Name="tabISO61355" >
                                <TabItem x:Name="tabISO61355Search" Header="Search Classes/Examples">
                                    <GroupBox x:Name="grpSearchISO61355" Grid.Row="1" Header="{Binding UIString[], FallbackValue='Search bookmarked tags or any keyword for subclass or document samples'}" BorderBrush="#FFABADB3" Margin="0,5,0,0">
                                        <Grid x:Name="grdISO61355Search" Width="562">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="35"/>
                                                <ColumnDefinition Width="141"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <RadioButton x:Name="radioSearchBkmk" Content="Search bookmarks only" Grid.Column="0" IsChecked="True" Margin="0,5" Grid.ColumnSpan="2"/>
                                            <RadioButton Content="Search all" Grid.Column="2" Margin="5,5,0,5"/>
                                            <TextBox x:Name="txtSearchISO61355" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" ToolTip="{Binding UIString[], FallbackValue=Remind the Token based search behavior - use * to combine the letters with incomplete numbers or vice versa.}" BorderThickness="1" />
                                            <Button x:Name="btnSearchISO61355" Grid.Column="3" Grid.Row="1" Content="{Binding UIString[], FallbackValue=Search}" Command="{Binding PsCmd[mSearchISO61355]}" Width="80" Margin="3,0,0,0" BorderBrush="#FFABADB3" Height="24"/>
                                        </Grid>
                                    </GroupBox>
                                </TabItem>
                                <TabItem x:Name="tabISO61355Navigate" Header="Navigate Classes" >
                                    <GroupBox x:Name="grpISO61355" Header="{Binding UIString[], FallbackValue=Classification Hierarchy}" Grid.Row="0" BorderBrush="#FFABADB3" MinWidth="574" Margin="0,5,0,0">
                                        <Grid x:Name="grdISO61355Filter">
                                            <WrapPanel x:Name="wrpISO61355" Grid.Row="2">
                                                <Button x:Name="btnISO61355Reset" Command="{Binding PsCmd[mResetISO61355BrdCrmb]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" Width="24" Height="24">
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Border BorderBrush="#FFABADB3" BorderThickness="1">
                                                                <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </WrapPanel>
                                        </Grid>
                                    </GroupBox>
                                </TabItem>
                            </TabControl>
                            <TextBox x:Name="txtISO61355StatusMsg" Grid.Row="3" TextWrapping="Wrap" HorizontalContentAlignment="Center" BorderBrush="#FFE5E5E5" VerticalAlignment="Top" 
                                BorderThickness="0" Visibility="Collapsed" Background="#FFF6FB82"/>
                            <DataGrid x:Name="dataGrdISO61355Found" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" 
                                HorizontalGridLinesBrush="WhiteSmoke" VerticalGridLinesBrush="WhiteSmoke" ColumnHeaderHeight="26" 
                                AlternatingRowBackground="LightCyan" Background="White" Cursor="Hand" ClipboardCopyMode="IncludeHeader" 
                                Focusable="False" VerticalScrollBarVisibility="Auto" Grid.Row="4" RowHeight="24" Margin="0,5,0,0" MaxWidth="{Binding ActualWidth, ElementName=tabISO61355, Mode=OneWay}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="dtgrdColPath" Binding="{Binding PathCode}" Width="Auto" CanUserResize="False">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Path, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="dtgrdColCode" Binding="{Binding Code}" Width="Auto" CanUserResize="False">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Code, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="dtgrdColSubCls" Binding="{Binding SubClass}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Subclass, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="Auto" TextWrapping="WrapWithOverflow"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="dtgrdColSubClsDE" Binding="{Binding SubClassDE}" Width="Auto" MinWidth="140">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Subclass DE, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Height="Auto" TextWrapping="WrapWithOverflow"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="dtgrdColCmmts" Binding="{Binding Example}" MinWidth="200" Width="Auto">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Examples, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                               TextWrapping="Wrap" Height="Auto"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="dtgrdColCmmtsDE" Binding="{Binding ExampleDE}" MinWidth="200" Width="Auto">
                                        <DataGridTextColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DataContext.UIString[], FallbackValue=Examples DE, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                               TextWrapping="Wrap" Height="Auto"/>
                                            </DataTemplate>
                                        </DataGridTextColumn.HeaderTemplate>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding PsCmd[mApplyISO61355]}" Header="{Binding UIString[], FallbackValue=Apply Classification}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                            <Grid x:Name="grdISO61355Buttons" Grid.Row="5" Margin="0,15,0,5">
                                <Button x:Name="btnISO61355Adopt" Command="{Binding PsCmd[mApplyISO61355]}" 
                                    Content="{Binding UIString[], FallbackValue=Apply Classification}"                             
                                    HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                                    ToolTip="{Binding UIString[]}"/>
                            </Grid>
                        </Grid>
                    </Expander>
                </Grid>
            </AdornerDecorator>
        </TabItem>
        <TabItem x:Name="tabRevision" Header="{Binding UIString[LBL12], FallbackValue=Revision}">
            <AdornerDecorator>
                <Grid x:Name="grdRevision" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" 
                  Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdRevSysProps" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblRevision1" Content="{Binding UIString[LBL12], FallbackValue=Revision}" Grid.Row="0" Height="Auto"/>
                        <TextBox x:Name="txtRevision1" Text="{Binding Prop[_XLTN_REVISION].Value}"  Grid.Column="1" IsReadOnly="True" Grid.Row="0" Height="Auto"/>
                        <Label x:Name="lblStatus1" Content="{Binding UIString[LBL4], FallbackValue=Status}" Grid.Row="1" Height="Auto"/>
                        <TextBox x:Name="txtStatus1" Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Height="Auto" />
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_06], FallbackValue='Latest Released Rev.'}" Grid.Column="3" 
                        Visibility="{Binding Visibility, ElementName=LatestRev}" Height="Auto"/>
                        <Border Grid.Column="4" BorderThickness="0,1,1,0" BorderBrush="#FFABADB3" >
                            <CheckBox x:Name="LatestRev" IsChecked="{Binding Prop[Latest Released Revision].Value}" IsEnabled="False" VerticalAlignment="Center" Margin="5,0,0,0" />
                        </Border>
                        <Label x:Name="lbLfcDef1" Content="{Binding UIString[Adsk.QS.RevTab_02], FallbackValue=Lifecycle Definition}" Grid.Column="3" Grid.Row="1" Height="Auto"/>
                        <TextBox x:Name="txtLfcDef1" Text="{Binding Prop[_XLTN_LIFECLCDEF].Value}" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Height="Auto" />
                        <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Row="2" Height="Auto" BorderThickness="1"/>
                        <TextBox x:Name="txtCreatedBy" Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Height="Auto" BorderThickness="0,1,1,1" />
                        <Label Content="{Binding UIString[LBL33], FallbackValue=Create Date}" Grid.Row="2" Grid.Column="3" Height="Auto" BorderThickness="1"/>
                        <TextBox x:Name="txtCreateDate" Text="{Binding Prop[_XLTN_DATE VERSION CREATED].Value}" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Height="Auto" BorderThickness="0,1,1,1"/>
                    </Grid>
                    <Grid x:Name="grdInitialRelease" Grid.Row="2" Visibility="Visible">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        <Label Content="Initial Creator" Height="Auto" Grid.Row="0"/>
                        <TextBox x:Name="txtInitialCreator" Text="{WPF:ValidatedBinding Prop[Initial Creator].Value}" Grid.Column="1" Height="Auto" IsEnabled="{Binding PsVal[InvertReadOnly]}"/>
                        <Label Content="Initial Create Date" Grid.Column="3" Height="Auto"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,0" Grid.Column="4">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Initial Create Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                        </Border>
                        <Label Content="Initial Reviewer" Height="Auto" Grid.Row="1"/>
                        <TextBox x:Name="txtInitialReviewer" Text="{WPF:ValidatedBinding Prop[Initial Reviewer].Value}" Grid.Column="1" Grid.Row="1" Height="Auto" IsEnabled="{Binding PsVal[InvertReadOnly]}"/>
                        <Label Content="Initial Review Date" Grid.Column="3" Height="Auto" Grid.Row="1"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,0" Grid.Column="4" Grid.Row="1">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Initial Review Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto" />
                        </Border>
                        <Label Content="Initial Approved By" Height="Auto" Grid.Row="2" BorderThickness="1"/>
                        <TextBox x:Name="txtInitialApprover" Text="{WPF:ValidatedBinding Prop[Initial Approved By].Value}" Grid.Column="1" Grid.Row="2" Height="Auto" BorderThickness="0,1,1,1" IsEnabled="{Binding PsVal[InvertReadOnly]}" />
                        <Label Content="Initial Approval Date" Grid.Column="3" Height="Auto" Grid.Row="2" BorderThickness="1"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,1" Grid.Column="4" Grid.Row="2">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Initial Approval Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="26" />
                        </Border>
                    </Grid>
                    <Grid x:Name="grdApproval" Grid.Row="2" d:IsHidden="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding UIString[CheckedBy], FallbackValue=Checked By}" Grid.Row="0" Grid.Column="0"  Height="Auto"/>
                        <TextBox x:Name="txtCheckedBy" Text="{WPF:ValidatedBinding Prop[_XLTN_CHECKEDBY].Value}" 
                                 IsEnabled="{Binding PsVal[InvertReadOnly]}" Grid.Column="1" Grid.Row="0" Height="Auto"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_07], FallbackValue=Checked Date}" Grid.Row="0" Grid.Column="3"  Height="Auto"/>
                        <Border Grid.Column="4" Grid.Row="0"  Height="Auto" BorderBrush="#FFABADB3" BorderThickness="0,1,1,0">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[_XLTN_CHECKEDDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, UpdateSourceTrigger=PropertyChanged}"  
                                        IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                        </Border>
                        <Label Content="{Binding UIString[EngrApprovedBy], FallbackValue=Engr Approved By}" Grid.Row="1" Grid.Column="0"  Height="Auto" BorderThickness="1"/>
                        <TextBox x:Name="txtEngApprvdBy" Text="{WPF:ValidatedBinding Prop[_XLTN_ENGAPPRVDBY].Value}" 
                                 IsEnabled="{Binding PsVal[InvertReadOnly]}" Grid.Column="1" Grid.Row="1" Height="Auto" BorderThickness="0,1,1,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_08], FallbackValue=Engr Approved Date}" Grid.Row="1" Grid.Column="3" Height="Auto" BorderThickness="1"/>
                        <Border Grid.Column="4" Grid.Row="1" Height="Auto" BorderBrush="#FFABADB3" BorderThickness="0,1,1,1">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[_XLTN_ENGAPPRVDDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" 
                                        IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="25" />
                        </Border>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_09], FallbackValue=Change Description}" Grid.Row="3" Height="Auto" BorderThickness="1"/>
                        <ComboBox x:Name="cmbChangeDescr"
                              ItemsSource="{Binding Prop[_XLTN_CHANGEDESCR].ListValues}" 
                              Text="{WPF:ValidatedBinding Prop[_XLTN_CHANGEDESCR].Value}" 
                              SelectedValue="{Binding Prop[_XLTN_CHANGEDESCR].Value}"
                              IsEditable="True" IsEnabled="{Binding PsVal[InvertReadOnly]}"
                              Grid.Column="1" Height="Auto" Grid.Row="3" Grid.ColumnSpan="4" BorderThickness="0,1,1,1" />
                    </Grid>
                    <Grid x:Name="grdIssues" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding UIString[FAM.Issue], FallbackValue='Issue'}" BorderThickness="1" Height="26"/>
                        <ComboBox x:Name="cmbIssue1" Grid.Row="1" ItemsSource="{Binding Prop[Issue 1].ListValues}" SelectedItem="{Binding Prop[Issue 1].Value}" 
                                  IsEnabled="{Binding PsVal[InvertReadOnly]}" BorderThickness="1,1,1,0" Height="26"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,0" Grid.Column="1" Grid.Row="1" Height="26" VerticalAlignment="Bottom">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Issue 1 Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                        </Border>
                        <TextBox x:Name="txtIssueAppr1" Text="{Binding Prop[Issue 1 Approver].Value}" Grid.Column="2" Grid.Row="1" BorderThickness="0,1,1,0" Height="26"/>
                        <Label Content="{Binding UIString[FAM.Issue.Name], FallbackValue='Approver'}" Grid.Column="2" Height="26" BorderThickness="0,1,1,1"/>
                        <ComboBox x:Name="cmbIssue2" Grid.Row="2" ItemsSource="{Binding Prop[Issue 2].ListValues}" 
                                  SelectedItem="{Binding Prop[Issue 2].Value}"
                                  IsEnabled="{Binding PsVal[InvertReadOnly]}" BorderThickness="1,1,1,0" Height="26"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,0" Grid.Column="1" Grid.Row="2" Height="26">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Issue 2 Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="Auto"  />
                        </Border>
                        <TextBox x:Name="txtIssueAppr2" Text="{Binding Prop[Issue 2 Approver].Value}" Grid.Column="2" Grid.Row="2" BorderThickness="0,1,1,0" Height="26"/>
                        <Label Content="{Binding UIString[FAM.Issue.Date], FallbackValue='Date'}" Grid.Column="1" BorderThickness="0,1,1,1" Height="26"/>
                        <ComboBox x:Name="cmbIssue3" Grid.Row="3" ItemsSource="{Binding Prop[Issue 3].ListValues}" 
                                  SelectedItem="{Binding Prop[Issue 3].Value}"
                                  IsEnabled="{Binding PsVal[InvertReadOnly]}" BorderThickness="1" Height="26"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,1" Grid.Column="1" Grid.Row="3" Height="26">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[Issue 3 Date].Value}" IsEnabled="{Binding PsVal[InvertReadOnly]}" Height="26"  />
                        </Border>
                        <TextBox x:Name="txtIssueAppr3" Text="{Binding Prop[Issue 3 Approver].Value}" Grid.Column="2" Grid.Row="3" BorderThickness="0,1,1,1" Height="26"/>
                    </Grid>
                    <Grid x:Name="grdCustomerApproval" Grid.Row="6" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_11], FallbackValue=Customer Approved By}" Grid.Column="0" Height="Auto" BorderThickness="1"/>
                        <TextBox x:Name="txtApprovedBy" Text="{WPF:ValidatedBinding Prop[_XLTN_CUSTAPPRVDBY].Value}" Height="Auto" Grid.Column="1" BorderThickness="0,1,1,1"/>
                        <Label Content="{Binding UIString[Adsk.QS.RevTab_12], FallbackValue=Cust. Approved Date}" Height="Auto" Grid.Column="3" BorderThickness="1"/>
                        <Border BorderBrush="#FFABADB3" BorderThickness="0,1,1,1" Grid.Column="4">
                            <DatePicker SelectedDate="{WPF:ValidatedBinding Prop[_XLTN_CUSTAPPRVDDATE].Value, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}, UpdateSourceTrigger=PropertyChanged}"  Height="Auto"  />
                        </Border>
                    </Grid>
                    <Grid x:Name="ButtonGridTabRevision" Style="{StaticResource ButtonGridStyle}" Grid.Row="8" Grid.ColumnSpan="2" Margin="0,5,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK2" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                        Command="{Binding CloseWindowCommand, ElementName=FileWindow}" IsEnabled="{Binding Properties.IsValid}"
                        Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                        <Button x:Name="btnEsc2" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                        Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80"
                        HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp2" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                        Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                </Grid>
            </AdornerDecorator>
        </TabItem>
        <TabItem x:Name="tabItemProperties" Header="{Binding UIString[Adsk.QS.ItemSearch_28], FallbackValue=Assigned Item}" HorizontalAlignment="Left" VerticalAlignment="Top">
            <TabItem.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                </LinearGradientBrush>
            </TabItem.Background>
            <Grid x:Name="grdAssignedItemMain" Background="#FFF0F0F0" Height="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" MinWidth="694" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" Margin="5" MaxWidth="825">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="120"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid x:Name="grdStatus">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAssignedItemRefresh" Command="{Binding PsCmd[mGetItemByFileFromVault]}" >
                        <Image Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\Refresh_32.ico" StretchDirection="DownOnly"/>
                    </Button>
                    <TextBox x:Name="txtAssignedItemStatus" Grid.Column="1" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" BorderThickness="1" Padding="5,0,0,0" MinHeight="24"/>
                </Grid>
                <Grid x:Name="grdItemSysProps" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                        <RowDefinition Height="24"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="234*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="235*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="lblRevision" Content="{Binding UIString[LBL12], FallbackValue=Revision}"/>
                    <TextBox x:Name="txtItemRevision" Grid.Column="1" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemNumber" Content="{Binding UIString[LBL31], FallbackValue=Number}" Grid.Row="1"/>
                    <TextBox x:Name="txtItemNumber" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemTitle" Content="{Binding UIString[Adsk.QS.ItemSearch_02], FallbackValue=Title}" Grid.Row="2"/>
                    <TextBox x:Name="txtItemTitle" Grid.Column="1" Grid.Row="2" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemDescription" Content="{Binding UIString[Adsk.QS.ItemSearch_03], FallbackValue=Description}" Grid.Row="3"/>
                    <TextBox x:Name="txtItemDescription" Grid.Column="1" Grid.Row="3" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemUnits" Content="{Binding UIString[Adsk.QS.ItemSearch_23], FallbackValue=Units}"  Grid.Row="4" BorderThickness="1"/>
                    <TextBox x:Name="txtItemUnits" Grid.Column="1" Grid.Row="4" BorderThickness="0,1,1,1" IsReadOnly="True" Background="White"/>
                    <Border x:Name="brdItemThumbnail" Grid.Column="2" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#FFABADB3" Margin="5,0" Height="96" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                        <Image x:Name="ItemThumbnail" VerticalAlignment="Top"/>
                    </Border>
                    <Label x:Name="lblItemCategory" Content="{Binding UIString[Adsk.QS.ItemSearch_05], FallbackValue=Category Name}" BorderThickness="1,1,1,0" Grid.Column="3"/>
                    <TextBox x:Name="txtItemCategory" Grid.Column="4" IsReadOnly="True" Background="White" />
                    <Label x:Name="lblItemLfcState" Content="{Binding UIString[LBL14], FallbackValue=Lifecycle State}" Grid.Column="3" Grid.Row="1"/>
                    <TextBox x:Name="txtItemLfcState" Grid.Column="4" Grid.Row="1" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemLastUpdatedBy" Content="{Binding UIString[Adsk.QS.ItemSearch_24], FallbackValue=Last Updated By}" Grid.Column="3" Grid.Row="2"/>
                    <TextBox x:Name="txtItemLastUpdatedBy" Grid.Column="4" Grid.Row="2" IsReadOnly="True" Background="White"/>
                    <Label x:Name="lblItemLastUpdatedDate" Content="{Binding UIString[Adsk.QS.ItemSearch_25], FallbackValue='Last Updated Date                             '}" Grid.Column="3" Grid.Row="3" BorderThickness="1"/>
                    <TextBox x:Name="txtItemLastUpdatedDate" Grid.Column="4" Grid.Row="3" BorderThickness="0,1,1,1" IsReadOnly="True" Background="White"/>
                </Grid>
                <DataGrid x:Name="dtgrdItemProps" AutoGenerateColumns="False" CanUserReorderColumns="False" Grid.Row="2" HorizontalGridLinesBrush="#FFABADB3" VerticalGridLinesBrush="#FFABADB3" Margin="0,10,0,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="ItemPropName" Binding="{Binding Name, Mode=OneWay}" IsReadOnly="True" Width="Auto">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_26], FallbackValue=Property Name,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="ItemPropValue" Binding="{Binding Value, Mode=OneWay}" IsReadOnly="True" Width="*">
                            <DataGridTextColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.ItemSearch_27], FallbackValue=Property Value, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </DataTemplate>
                            </DataGridTextColumn.HeaderTemplate>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem x:Name="tabClassification" Header="{Binding UIString[Adsk.QS.Classification_03], FallbackValue=Classification}" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" >
            <TabItem.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="#FFF0F0F0" Offset="1"/>
                </LinearGradientBrush>
            </TabItem.Background>
            <AdornerDecorator>
                <Grid x:Name="grdClassification" Background="#FFF0F0F0" Width="{Binding ActualWidth, ElementName=grdMain, Mode=OneWay}" MinHeight="{Binding ActualHeight, ElementName=grdMain, Mode=OneWay}" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAddClass" Content="{Binding UIString[], FallbackValue=Activate}"  Command="{Binding PsCmd[mAddClassification]}" Grid.Column="2" Grid.Row="2" BorderThickness="1" Height="24" Margin="2" MinWidth="80"/>
                    <Button x:Name="btnRemoveClass" Content="{Binding UIString[],FallbackValue=Remove}" Command="{Binding PsCmd[mRemoveClassification]}" Grid.Row="5" Grid.Column="2" BorderThickness="1" Height="24" Margin="2,2,0,2" MinWidth="80"/>
                    <Label x:Name="lblActiveClass" Content="{Binding UIString[Adsk.QS.Classification_06], FallbackValue='Active Classification'}" Height="24" Grid.Row="5" BorderThickness="1"/>
                    <TextBox x:Name="txtActiveClass" IsHitTestVisible="False" Height="24" Text="{Binding Prop[_XLTN_CLASS].Value}" Grid.Row="5" Grid.Column="1" BorderThickness="1" Margin="5,0,0,0"/>
                    <Label x:Name="lblClassProps" Content="{Binding UIString[Adsk.QS.Classification_07], FallbackValue='Class Properties'}" Grid.Row="7" Height="Auto" BorderThickness="1"/>
                    <DataGrid x:Name="dtgrdClassProps" Grid.Row="7" AutoGenerateColumns="False" Grid.Column="1" SelectionUnit="Cell" HorizontalGridLinesBrush="#FFEEEEF2" VerticalGridLinesBrush="#FFE7E8EC" BorderThickness="1" Grid.ColumnSpan="3" BorderBrush="#FFABADB3" Margin="5,0,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ClassPropName" Binding="{Binding Key, Mode=OneWay}" CellStyle="{StaticResource DynamicDataGridLabelStyle}" Width="Auto">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.Classification_01], FallbackValue=Property Name,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="ClassPropValue" Binding="{Binding Value, Mode=OneWay}" CellStyle="{StaticResource ClassificationDataGridCellStyle}"  Width="*">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[Adsk.QS.Classification_02], FallbackValue=Property Value,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="ButtonGridTabClassific" Style="{StaticResource ButtonGridStyle}" Grid.Row="9" Grid.ColumnSpan="4" Margin="0,5,2,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK1" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                        Command="{Binding CloseWindowCommand, ElementName=FileWindow}" IsEnabled="{Binding IsNotReadonly}"
                        Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                        <Button x:Name="btnEsc1" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                        Command="{Binding CancelWindowCommand, ElementName=FileWindow}" Grid.Column="4" Width="80"
                        HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp1" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                        Command="{Binding PsCmd[mHelp(500)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                    <WrapPanel x:Name="wrpClassification2" Grid.ColumnSpan="3" Grid.Column="1" Margin="5,0,0,0"/>
                    <Button x:Name="btnClsReset2" Command="{Binding PsCmd[mResetClassSelection]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[ClassTerms_TT07], FallbackValue=Reset Selection}" Foreground="Red" IsEnabled="{Binding IsNotReadonly}" Width="24" Height="24" HorizontalAlignment="Right">
                        <Button.Template>
                            <ControlTemplate>
                                <Border BorderBrush="#FFABADB3" BorderThickness="1">
                                    <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\filter-delete.ico" Margin="2" />
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Label x:Name="lblClassHierarchy" Content="{Binding UIString[Adsk.QS.Classification_04], FallbackValue='Class-Hierarchy'}" Height="24" VerticalAlignment="Center" BorderThickness="1" Width="112" HorizontalAlignment="Left"/>
                    <Label x:Name="lblAvailableClasses" Content="{Binding UIString[Adsk.QS.Classification_05], FallbackValue=Classes}" Grid.Row="2" VerticalAlignment="Center" BorderThickness="1" Height="24"/>
                    <ComboBox x:Name="cmbAvailableClasses" DisplayMemberPath="Name" SelectedValuePath="Name" Grid.Column="1" Grid.Row="2" Height="24" VerticalAlignment="Center" Margin="5,0,0,0" BorderThickness="1"/>
                    <TextBox x:Name="txtClassificationStatus" Height="Auto" TextWrapping="Wrap" Background="#FFFFFFE1" BorderThickness="1" Padding="5,0,0,0" MinHeight="24" Grid.Row="4" Grid.Column="1" Margin="5,0,0,0"/>
                </Grid>
            </AdornerDecorator>
        </TabItem>
    </TabControl>
</WPF:MainWindow>