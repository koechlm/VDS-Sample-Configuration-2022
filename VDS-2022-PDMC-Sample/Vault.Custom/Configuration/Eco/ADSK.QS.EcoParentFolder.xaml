<?xml version="1.0" encoding="utf-8"?>
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviours="clr-namespace:Common.Wpf;assembly=Common"
             xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject" xmlns:Globalization="clr-namespace:System.Globalization;assembly=mscorlib"
             x:Name="MainWindow"
             behaviours:TabTitleBehavior.TabTitle="Parent Folder">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
            <Setter Property="BorderThickness" Value="1,1,1,0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="#ff0000"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
            <Setter Property="BorderThickness" Value="0,1,1,0"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="25.5" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="Margin" Value="0,4,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <DataTrigger Binding="{Binding Typ}" Value="String">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" 
                                VerticalContentAlignment="Center" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" IsHitTestVisible="False" IsTabStop="False" Width="Auto" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Numeric">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"
                                Height="25" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="Bool">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True" BorderThickness="0">
                                    <ComboBoxItem Content="True"/>
                                    <ComboBoxItem Content="False"/>
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="grdMain" Margin="0,5,5,0" ScrollViewer.CanContentScroll="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition MaxWidth="500" MinWidth="500" Width="3*"/>
        </Grid.ColumnDefinitions>
        <Image HorizontalAlignment="Left" Height="24" Margin="11,11,0,0" VerticalAlignment="Top" Width="24" Source="C:\ProgramData\Autodesk\Vault 2022\Extensions\DataStandard\Vault.Custom\Configuration\Eco\Icons\GlobalFolderView_32.png"/>
        <Label Content="ECO Parent Folder" HorizontalAlignment="Left" Margin="44,10,0,0" VerticalAlignment="Top" BorderThickness="0"/>
        <Grid x:Name="grdStaticProps" ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="10,0,0,0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="StaticPropsLabelCol" Width="1*"/>
                <ColumnDefinition x:Name="StaticPropsValueCol" MinWidth="180" Width="2*" />
            </Grid.ColumnDefinitions>
            <Label x:Name="label" Content="{Binding UIString[LBL8], FallbackValue=Category}" Grid.Column="0"/>
            <TextBox Text="" x:Name="txtCategory" Grid.Column="1" />
            <Label x:Name="label1" Content="{Binding UIString[LBL19], FallbackValue=Name}" Grid.Column="0" Grid.Row="1" />
            <TextBox x:Name="txtName" Text="" Grid.Column="1" Grid.Row="1" />
            <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="2" />
            <TextBox x:Name="txtState" Text="" Grid.Column="1" Grid.Row="2" />
            <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="3" />
            <TextBox x:Name="txtCreateDate" Text="" Grid.Column="1" Grid.Row="3" />
            <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="4" BorderThickness="1" />
            <TextBox x:Name="txtCreatedBy" Text="" Grid.Column="1" Grid.Row="4" BorderThickness="0,1,1,1" />
        </Grid>
        <Grid x:Name="grdDynProps" Grid.Column="1" Margin="5,0,0,0" Grid.RowSpan="2" Grid.Row="1" ScrollViewer.CanContentScroll="True" >
            <DataGrid x:Name="dtgrdParentFolder" ToolTip="{Binding UIString[LBL63], FallbackValue=Category Properties}"
                ItemsSource="{Binding DynamicProperties}" 
                AutoGenerateColumns="False" 
                HeadersVisibility="Column"
                ScrollViewer.CanContentScroll="True" 
                HorizontalGridLinesBrush="WhiteSmoke" 
                VerticalGridLinesBrush="WhiteSmoke" BorderBrush="Gray">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key}" CellStyle="{StaticResource DynamicDataGridLabelStyle}" Width="140" IsReadOnly="True">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Value}"  Width="*" CellStyle="{StaticResource DynamicDataGridCellStyle}" IsReadOnly="True">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid x:Name="grdComments" Grid.ColumnSpan="2" Grid.Row="3" Margin="10,10,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="CommentGridLabelCol" Width="{Binding ActualWidth, ElementName=label1, Mode=OneWay}"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Height="Auto" BorderThickness="1,1,0,1" VerticalAlignment="Top"/>
            <TextBox x:Name="txtComments" Text="" Height="Auto" TextWrapping="Wrap" MinHeight="62" BorderThickness="1" Grid.Column="1" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top"/>
        </Grid>
    </Grid>
</UserControl>