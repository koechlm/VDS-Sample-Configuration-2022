<?xml version="1.0" encoding="utf-8"?>

<WPF:DSWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:WPF="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"
              xmlns:system="clr-namespace:System;assembly=mscorlib"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
              x:Name="InventorWindow" WindowStyle="ToolWindow" ShowInTaskbar="False" Topmost="True"
              Background="#F0F0F0" ResizeMode="NoResize" SizeToContent="WidthAndHeight">
    <WPF:DSWindow.Resources>
        <WPF:IsMoreThanZeroConverter x:Key="MoreThanZeroConverter"/>
        <WPF:InverseBoolConverter x:Key="BoolConvert"/>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding Typ}" Value="String">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0" Height="20.75" CharacterCasing="{Binding Case}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value}" SelectedDateFormat="Short" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Double">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0"
                                         Height="25" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Boolean">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Decimal">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value}" BorderThickness="0"
                                         Height="25" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count, Converter={StaticResource MoreThanZeroConverter}}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value, StringFormat=N}"
                                  IsEditable="{Binding EnforceListValues, Converter={StaticResource BoolConvert}}" BorderThickness="0" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Material">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="1,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="#ff0000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="false">
                    <Setter Property="BorderBrush" Value="#FFABADB3" />
                    <Setter Property="BorderThickness" Value="0,1,1,0" />
                </Trigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="22" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,15,2,5" />
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="26.0" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </WPF:DSWindow.Resources>
    <Grid x:Name="grdMain" MinWidth="900"
          Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ToolTip="Folder / Project" />
            <RowDefinition Height="Auto" ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" />
            <RowDefinition ToolTip="Resulting Path" Height="Auto" />
            <RowDefinition ToolTip="Buttons" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <GroupBox x:Name="GroupFolder" Grid.ColumnSpan="2" Margin="-6,0,0,5" BorderThickness="0" Header="{Binding UIString[LBL1], FallbackValue=Folder}"
                  Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}">
            <WrapPanel x:Name="BreadCrumb" Height="Auto"
                       ItemWidth="165" Margin="1,0,0,0">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Margin" Value="-1,0,0,0" />
                        <Setter Property="ToolTip"
                                Value="{Binding SelectedValue.Name, RelativeSource={RelativeSource Self}}" />
                    </Style>
                </WrapPanel.Resources>
            </WrapPanel>

        </GroupBox>
        <Grid x:Name="grdGeneralProps" Grid.Row="1"
              ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Label Content="{Binding UIString[LBL8], FallbackValue=Category}"
                   Grid.Row="0"
                   Grid.Column="0" Height="Auto" />
            <ComboBox x:Name="Categories" Grid.Row="0" Grid.Column="1"
                      DisplayMemberPath="Name"
                      SelectedItem="{Binding DynamicPropertiesCategory}"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Prop[_Category].Value}"
                      ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                      IsEnabled="{Binding CreateMode}"/>
            <Label Grid.Row="1"
                   Grid.Column="0"
                   Content="{Binding UIString[LBL10], FallbackValue=Number Scheme}"
                   Visibility="{Binding Visibility, ElementName=NumSchms}" />
            <ComboBox x:Name="NumSchms" Grid.Column="1" Grid.Row="1"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Name"
                      SelectedValue="{Binding Prop[_NumSchm].Value}"
                      ItemsSource="{Binding PsList[GetNumSchms]}"
                      IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Label Grid.Row="2" Grid.Column="0" Content="{Binding UIString[LBL31], FallbackValue=Number}"
                   Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" Height="Auto" />
            <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Grid.Row="2" Grid.Column="1"
                                 Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                                 IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
                                 GeneratedNumberProperty="DocNumber"
                                 Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Style="{StaticResource NumSchmCtrlStyle}" />
            <Label Content="{Binding UIString[LBL6], FallbackValue=File Name}"
                   Grid.Row="3"
                   Grid.Column="0"
                   Visibility="{Binding Visibility, ElementName=FILENAME}" />
            <TextBox Grid.Row="3"
                     Grid.Column="1"
                     x:Name="FILENAME"
                     Text="{WPF:ValidatedBinding Prop[DocNumber].Value}"
                     IsReadOnly="{Binding Prop[_EditMode].Value}"
                     Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" />
            <Label x:Name="lblComments" Content="{Binding UIString[Comments], FallbackValue=Comments}" Grid.Row="4" BorderThickness="1" Height="Auto"/>
            <TextBox x:Name="txtComments" Grid.Column="1" Grid.Row="4" TextWrapping="Wrap" Text="{Binding Prop[Comments].Value}" BorderThickness="0,1,1,1" 
                     VerticalContentAlignment="Top" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="50" />
            <Border
                BorderBrush="White"
                Visibility="{Binding CopyMode, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="5"
                Margin="0,5,0,0" Grid.ColumnSpan="2">
                <Image Source="{Binding Prop[Thumbnail].Value}" Width="200"/>
            </Border>
        </Grid>
        <Grid x:Name="DSDynCatPropGrid" MinHeight="80" Grid.Column="1" Margin="5,0,0,0" Grid.Row="1"
              ToolTip="{Binding UIString[LBL63], FallbackValue='Category Properties'}">
            <DataGrid x:Name="DSDynamicCategoryProperties"
                      AutoGenerateColumns="False"
                      HeadersVisibility="Column"
                      ItemsSource="{Binding DynamicProperties}"
                      ScrollViewer.CanContentScroll="False"
                      EnableRowVirtualization="False"
                      HorizontalGridLinesBrush="WhiteSmoke"
                      VerticalGridLinesBrush="WhiteSmoke" MaxHeight="350" VerticalAlignment="Top">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding DispName}"
                                        CellStyle="{StaticResource DynamicDataGridLabelStyle}" 
                                        Width="*" IsReadOnly="True">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="Property Value"
                                            CellStyle="{StaticResource DynamicDataGridCellStyle}" Width="2*">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <GroupBox x:Name="GroupPath" Header="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="0"
                  Margin="-6,0,0,0" ToolTip="{Binding UIString[TLT1], FallbackValue='Local Path'}">
            <TextBox Text="{Binding PathAndFileNameHandler.Path}"
                     IsReadOnly="True"
                     Background="#F0F0F0" BorderThickness="1" Margin="0,0,-6,0" />
        </GroupBox>
        <Grid x:Name="ButtonGrid" VerticalAlignment="Bottom" Style="{StaticResource ResourceKey=ButtonGridStyle}"
              Grid.ColumnSpan="2" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <Button Command="{Binding CloseWindowCommand, ElementName=InventorWindow}"
                    IsEnabled="{Binding Properties.IsValid}" Grid.Column="2" Margin="0,5,0,5"
                    Width="80" HorizontalAlignment="Right" VerticalAlignment="Center"
                    ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[LBL35], FallbackValue=Cancel}"
                    Content="{Binding UIString[BTN1], FallbackValue=OK}" Height="24" IsDefault="True" />
            <Button Grid.Column="4" Width="80" HorizontalAlignment="Right" Margin="0,5,0,5" Height="24"
                    VerticalAlignment="Center" Command="{Binding CancelWindowCommand, ElementName=InventorWindow}"
                    IsCancel="true" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" />
        </Grid>

    </Grid>
</WPF:DSWindow>